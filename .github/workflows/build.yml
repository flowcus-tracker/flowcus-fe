# Note: In a yml each level is padded by 2 spaces
name: Flutter

on:
  # Runs this action when you push on master
  push:
    branches: [ "main" ]
  # Runs this when a PR against master is created
  pull_request:
    branches: [ "main" ]

# Add this permissions block to grant necessary access to create releases
permissions:
  contents: write
  packages: read

jobs:
  flutter_job:

    # The machine, we can also use windows-latest or ubuntu-latest
    # We are choosing macos-latest because we will be also building for iOS
    runs-on: ubuntu-latest

    steps:

      # Clones the project on the machine
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      # Sets up java 17
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Installs flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # flutter-version: '3.16.8'
          # ^ If you want to use a specific version of flutter
      
      # Fetches proj dependencies from pub
      - name: Install dependencies
        run: flutter pub get
        # ^ If you want to use a specific version of flutter

      # Create android apk
      - name: Build APK
        run: flutter build apk

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
      
      # Generate release timestamp
      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      # Get commit messages since last tag
      - name: Get Changes Since Last Tag
        id: get_changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "none")
          if [ "$LAST_TAG" = "none" ]; then
            echo "changelog=$(git log --pretty=format:'%h - %s (%an)' -10)" >> $GITHUB_OUTPUT
          else
            echo "changelog=$(git log $LAST_TAG..HEAD --pretty=format:'%h - %s (%an)')" >> $GITHUB_OUTPUT
          fi
      
      # Create GitHub Release (only on push to main, not on PR)
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          name: "ALPHA v0.1-${{ steps.timestamp.outputs.timestamp }}"
          tag_name: "v0.1-${{ steps.timestamp.outputs.timestamp }}"
          prerelease: true
          draft: false
          files: build/app/outputs/flutter-apk/app-release.apk
          body: |
            ### ⚠️ EARLY DEVELOPMENT STAGE ⚠️
            
            This is an automatically generated alpha release from the latest commit.
            
            ### About this build:
            - Latest changes: ${{ github.sha }}
            - Build timestamp: ${{ steps.timestamp.outputs.timestamp }}
            
            ### Commits since last release:
            ```
            ${{ steps.get_changes.outputs.changelog }}
            ```
            
            ### Known limitations:
            - This is an experimental build with limited testing
            - Features may be incomplete or non-functional
            - Use at your own risk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
